/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bibliotechquirosvargassemestreianno2018;

import File.CdFile;
import File.DvdFile;
import File.LaptopFile;
import File.ProjectorFile;
import File.SpeakerFile;
import File.StudentFile;
import domain.Cd;
import domain.Dvd;
import domain.Laptop;
import domain.Projector;
import domain.Speaker;
import domain.Student;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 * @author Steven
 * @author Eyleen
 */
public class AudiovisualLoan extends javax.swing.JInternalFrame {

    /**
     * Creates new form LoanLaptop
     */
    Student student = new Student();
    Laptop laptop = new Laptop();
    Speaker speaker = new Speaker();
    Projector projector = new Projector();
    Cd cd = new Cd();
    Dvd dvd = new Dvd();

    public AudiovisualLoan() {
        this.setTitle("Prestamo de audiovisuales");
        initComponents();
        idText.setText("");
        brandText.setText("");
        showInformation.setText("");

        this.btGroup = new ButtonGroup();
        this.bLaptop.setSelected(true);
        this.btGroup.add(bSpeaker);
        this.btGroup.add(bProjector);
        this.btGroup.add(bCds);
        this.btGroup.add(bDvds);
        this.btGroup.add(bLaptop);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        brandText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        showInformation = new javax.swing.JTextArea();
        searchBtn = new javax.swing.JButton();
        loanBtn = new javax.swing.JButton();
        bLaptop = new javax.swing.JRadioButton();
        bSpeaker = new javax.swing.JRadioButton();
        bCds = new javax.swing.JRadioButton();
        bProjector = new javax.swing.JRadioButton();
        bDvds = new javax.swing.JRadioButton();

        setClosable(true);

        jLabel1.setText("Carne:");

        jLabel2.setText("Marca/Nombre:");

        showInformation.setEditable(false);
        showInformation.setColumns(20);
        showInformation.setRows(5);
        jScrollPane1.setViewportView(showInformation);

        searchBtn.setText("Buscar");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        loanBtn.setText("Solicitar Prestamo");
        loanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loanBtnActionPerformed(evt);
            }
        });

        bLaptop.setText("Laptop");

        bSpeaker.setText("Parlantes");

        bCds.setText("Cd's");

        bProjector.setText("Proyector");

        bDvds.setText("Dvd's");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(bLaptop)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bSpeaker)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bProjector)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bCds)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bDvds))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(brandText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(searchBtn))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(loanBtn)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLaptop)
                    .addComponent(bSpeaker)
                    .addComponent(bProjector)
                    .addComponent(bCds)
                    .addComponent(bDvds))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brandText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loanBtn)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        File file = new File("./Student.dat");
        StudentFile studentFile;
        try {
            studentFile = new StudentFile(file);
            String c = this.idText.getText();
            if (studentFile.verifyUniversityId(c)) {
                if (bLaptop.isSelected()) {
                    File file2 = new File("./Laptop.dat");
                    LaptopFile laptopFile;

                    try {

                        laptopFile = new LaptopFile(file2);

                        laptop = laptopFile.searchBrand(this.brandText.getText());
                        if (laptop == null) {
                            JOptionPane.showMessageDialog(this, "No se han encontrado una laptop con esa marca.");
                        } else {
                            showInformation.setText("Marca: " + laptop.getBrand() + "\n" + "Color: " + laptop.getColor() + "\n" + "AÃ±o de fabriacion: " + laptop.getYear() + "\n" + "Cantidad disponible: " + laptop.getQuantity());
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                if (bSpeaker.isSelected()) {
                    File file2 = new File("./Speaker.dat");
                    SpeakerFile speakerFile;

                    try {

                        speakerFile = new SpeakerFile(file2);

                        speaker = speakerFile.searchBrand(this.brandText.getText());
                        if (speaker == null) {
                            JOptionPane.showMessageDialog(this, "No se han encontrado un parlante con esa marca.");
                        } else {
                            showInformation.setText("Marca: " + speaker.getBrand() + "\n" + "Canridad de parlantes: " + speaker.getQuantitySpeaker() + "\n" + "AÃ±o de fabriacion: " + speaker.getYear() + "\n" + "Cantidad disponible: " + speaker.getQuantity());
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                if (bProjector.isSelected()) {
                    File file2 = new File("./Projector.dat");
                    ProjectorFile projectorFile;

                    try {

                        projectorFile = new ProjectorFile(file2);

                        projector = projectorFile.searchBrand(this.brandText.getText());
                        if (projector == null) {
                            JOptionPane.showMessageDialog(this, "No se han encontrado un proyector con esa marca.");
                        } else {
                            showInformation.setText("Marca: " + projector.getBrand() + "\n" + "AÃ±o de fabriacion: " + projector.getYear() + "\n" + "Cantidad disponible: " + projector.getQuantity());
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                if (bCds.isSelected()) {
                    File file2 = new File("./Cd.dat");
                    CdFile cdFile;

                    try {

                        cdFile = new CdFile(file2);

                        cd = cdFile.searchName(this.brandText.getText());
                        if (cd == null) {
                            JOptionPane.showMessageDialog(this, "No se han encontrado un cd con ese nombre.");
                        } else {
                            showInformation.setText("Nombre: " + cd.getName() + "\n" + "AÃ±o de publicacion: " + cd.getYear() + "\n" + "Marca: " + cd.getBrand() + "Cantidad disponible: " + cd.getQuantity());
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                if (bDvds.isSelected()) {
                    File file2 = new File("./Dvd.dat");
                    DvdFile dvdFile;

                    try {

                        dvdFile = new DvdFile(file2);

                        dvd = dvdFile.searchName(this.brandText.getText());
                        if (dvd == null) {
                            JOptionPane.showMessageDialog(this, "No se han encontrado un dvd con ese nombre.");
                        } else {
                            showInformation.setText("Nombre: " + dvd.getName() + "\n" + "AÃ±o de publicacion: " + dvd.getYear() + "\n" + "Marca: " + dvd.getBrand() + "Cantidad disponible: " + dvd.getQuantity());
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "El carne indicado no esta registrado, por favor registrese antes de solicitar un prestamo");
            }
        } catch (IOException ex) {
            Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void loanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loanBtnActionPerformed
        if (this.showInformation.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Primero busque su pedido ");
        } else {
            if (bLaptop.isSelected()) {
                File file2 = new File("./Laptop.dat");
                LaptopFile laptopFile;

                try {
                    laptopFile = new LaptopFile(file2);
                    int quantity = laptopFile.reduceQuantity(this.brandText.getText());
                    laptopFile.update(this.brandText.getText(), quantity);
                    idText.setText("");
                    brandText.setText("");
                    showInformation.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if (bSpeaker.isSelected()) {
                File file2 = new File("./Speaker.dat");
                SpeakerFile speakerFile;

                try {
                    speakerFile = new SpeakerFile(file2);
                    int quantity = speakerFile.reduceQuantity(this.brandText.getText());
                    speakerFile.update(this.brandText.getText(), quantity);
                    idText.setText("");
                    brandText.setText("");
                    showInformation.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if (bProjector.isSelected()) {
                File file2 = new File("./Projector.dat");
                ProjectorFile projectorFile;

                try {
                    projectorFile = new ProjectorFile(file2);
                    int quantity = projectorFile.reduceQuantity(this.brandText.getText());
                    projectorFile.update(this.brandText.getText(), quantity);
                    idText.setText("");
                    brandText.setText("");
                    showInformation.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if (bCds.isSelected()) {
                File file2 = new File("./Cd.dat");
                CdFile cdFile;

                try {
                    cdFile = new CdFile(file2);
                    int quantity = cdFile.reduceQuantity(this.brandText.getText());
                    cdFile.update(this.brandText.getText(), quantity);
                    idText.setText("");
                    brandText.setText("");
                    showInformation.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            if (bDvds.isSelected()) {
                File file2 = new File("./Dvd.dat");
                DvdFile dvdFile;

                try {
                    dvdFile = new DvdFile(file2);
                    int quantity = dvdFile.reduceQuantity(this.brandText.getText());
                    dvdFile.update(this.brandText.getText(), quantity);
                    idText.setText("");
                    brandText.setText("");
                    showInformation.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(AudiovisualLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_loanBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bCds;
    private javax.swing.JRadioButton bDvds;
    private javax.swing.JRadioButton bLaptop;
    private javax.swing.JRadioButton bProjector;
    private javax.swing.JRadioButton bSpeaker;
    private javax.swing.JTextField brandText;
    private javax.swing.ButtonGroup btGroup;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loanBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextArea showInformation;
    // End of variables declaration//GEN-END:variables
}
